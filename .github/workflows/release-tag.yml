name: Build and Publish Docker Images for Tags

on:
  push:
    tags:
      - '*'

env:
  IMAGE: csociety/calico-cni

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Load Secrets from Vault
      #   uses: rancher-eio/read-vault-secrets@main
      #   with:
      #     secrets: |
      #       secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
      #       secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Run Download Script for ${{ matrix.arch }}
        run: |
          if [ "${{ matrix.arch }}" == "amd64" ]; then
            ./scripts/download-amd64
          else
            ./scripts/download-arm64
          fi

      - name: Build and Push Docker Image for ${{ matrix.arch }}
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ env.IMAGE }}:${{ github.ref_name }}-linux-${{ matrix.arch }}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Load Secrets from Vault
      #   uses: rancher-eio/read-vault-secrets@main
      #   with:
      #     secrets: |
      #       secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials username | DOCKER_USERNAME ;
      #       secret/data/github/repo/${{ github.repository }}/dockerhub/rancher/credentials password | DOCKER_PASSWORD
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and Push Docker Manifest
        run: |
          docker manifest create ${{ env.IMAGE }}:${{ github.ref_name }} \
            --amend ${{ env.IMAGE }}:${{ github.ref_name }}-linux-amd64 \
            --amend ${{ env.IMAGE }}:${{ github.ref_name }}-linux-arm64
          
          docker manifest push ${{ env.IMAGE }}:${{ github.ref_name }}
